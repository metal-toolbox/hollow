// Code generated by SQLBoiler 4.11.0 (https://github.com/volatiletech/sqlboiler). DO NOT EDIT.
// This file is meant to be re-generated in place and/or deleted at any time.

package models

import "testing"

// This test suite runs each operation test in parallel.
// Example, if your database has 3 tables, the suite will run:
// table1, table2 and table3 Delete in parallel
// table1, table2 and table3 Insert in parallel, and so forth.
// It does NOT run each operation group in parallel.
// Separating the tests thusly grants avoidance of Postgres deadlocks.
func TestParent(t *testing.T) {
	t.Run("Attributes", testAttributes)
	t.Run("ComponentFirmwareSets", testComponentFirmwareSets)
	t.Run("ComponentFirmwareSetMaps", testComponentFirmwareSetMaps)
	t.Run("ComponentFirmwareVersions", testComponentFirmwareVersions)
	t.Run("ServerComponentTypes", testServerComponentTypes)
	t.Run("ServerComponents", testServerComponents)
	t.Run("ServerCredentialTypes", testServerCredentialTypes)
	t.Run("ServerCredentials", testServerCredentials)
	t.Run("Servers", testServers)
	t.Run("VersionedAttributes", testVersionedAttributes)
}

func TestSoftDelete(t *testing.T) {
	t.Run("Servers", testServersSoftDelete)
}

func TestQuerySoftDeleteAll(t *testing.T) {
	t.Run("Servers", testServersQuerySoftDeleteAll)
}

func TestSliceSoftDeleteAll(t *testing.T) {
	t.Run("Servers", testServersSliceSoftDeleteAll)
}

func TestDelete(t *testing.T) {
	t.Run("Attributes", testAttributesDelete)
	t.Run("ComponentFirmwareSets", testComponentFirmwareSetsDelete)
	t.Run("ComponentFirmwareSetMaps", testComponentFirmwareSetMapsDelete)
	t.Run("ComponentFirmwareVersions", testComponentFirmwareVersionsDelete)
	t.Run("ServerComponentTypes", testServerComponentTypesDelete)
	t.Run("ServerComponents", testServerComponentsDelete)
	t.Run("ServerCredentialTypes", testServerCredentialTypesDelete)
	t.Run("ServerCredentials", testServerCredentialsDelete)
	t.Run("Servers", testServersDelete)
	t.Run("VersionedAttributes", testVersionedAttributesDelete)
}

func TestQueryDeleteAll(t *testing.T) {
	t.Run("Attributes", testAttributesQueryDeleteAll)
	t.Run("ComponentFirmwareSets", testComponentFirmwareSetsQueryDeleteAll)
	t.Run("ComponentFirmwareSetMaps", testComponentFirmwareSetMapsQueryDeleteAll)
	t.Run("ComponentFirmwareVersions", testComponentFirmwareVersionsQueryDeleteAll)
	t.Run("ServerComponentTypes", testServerComponentTypesQueryDeleteAll)
	t.Run("ServerComponents", testServerComponentsQueryDeleteAll)
	t.Run("ServerCredentialTypes", testServerCredentialTypesQueryDeleteAll)
	t.Run("ServerCredentials", testServerCredentialsQueryDeleteAll)
	t.Run("Servers", testServersQueryDeleteAll)
	t.Run("VersionedAttributes", testVersionedAttributesQueryDeleteAll)
}

func TestSliceDeleteAll(t *testing.T) {
	t.Run("Attributes", testAttributesSliceDeleteAll)
	t.Run("ComponentFirmwareSets", testComponentFirmwareSetsSliceDeleteAll)
	t.Run("ComponentFirmwareSetMaps", testComponentFirmwareSetMapsSliceDeleteAll)
	t.Run("ComponentFirmwareVersions", testComponentFirmwareVersionsSliceDeleteAll)
	t.Run("ServerComponentTypes", testServerComponentTypesSliceDeleteAll)
	t.Run("ServerComponents", testServerComponentsSliceDeleteAll)
	t.Run("ServerCredentialTypes", testServerCredentialTypesSliceDeleteAll)
	t.Run("ServerCredentials", testServerCredentialsSliceDeleteAll)
	t.Run("Servers", testServersSliceDeleteAll)
	t.Run("VersionedAttributes", testVersionedAttributesSliceDeleteAll)
}

func TestExists(t *testing.T) {
	t.Run("Attributes", testAttributesExists)
	t.Run("ComponentFirmwareSets", testComponentFirmwareSetsExists)
	t.Run("ComponentFirmwareSetMaps", testComponentFirmwareSetMapsExists)
	t.Run("ComponentFirmwareVersions", testComponentFirmwareVersionsExists)
	t.Run("ServerComponentTypes", testServerComponentTypesExists)
	t.Run("ServerComponents", testServerComponentsExists)
	t.Run("ServerCredentialTypes", testServerCredentialTypesExists)
	t.Run("ServerCredentials", testServerCredentialsExists)
	t.Run("Servers", testServersExists)
	t.Run("VersionedAttributes", testVersionedAttributesExists)
}

func TestFind(t *testing.T) {
	t.Run("Attributes", testAttributesFind)
	t.Run("ComponentFirmwareSets", testComponentFirmwareSetsFind)
	t.Run("ComponentFirmwareSetMaps", testComponentFirmwareSetMapsFind)
	t.Run("ComponentFirmwareVersions", testComponentFirmwareVersionsFind)
	t.Run("ServerComponentTypes", testServerComponentTypesFind)
	t.Run("ServerComponents", testServerComponentsFind)
	t.Run("ServerCredentialTypes", testServerCredentialTypesFind)
	t.Run("ServerCredentials", testServerCredentialsFind)
	t.Run("Servers", testServersFind)
	t.Run("VersionedAttributes", testVersionedAttributesFind)
}

func TestBind(t *testing.T) {
	t.Run("Attributes", testAttributesBind)
	t.Run("ComponentFirmwareSets", testComponentFirmwareSetsBind)
	t.Run("ComponentFirmwareSetMaps", testComponentFirmwareSetMapsBind)
	t.Run("ComponentFirmwareVersions", testComponentFirmwareVersionsBind)
	t.Run("ServerComponentTypes", testServerComponentTypesBind)
	t.Run("ServerComponents", testServerComponentsBind)
	t.Run("ServerCredentialTypes", testServerCredentialTypesBind)
	t.Run("ServerCredentials", testServerCredentialsBind)
	t.Run("Servers", testServersBind)
	t.Run("VersionedAttributes", testVersionedAttributesBind)
}

func TestOne(t *testing.T) {
	t.Run("Attributes", testAttributesOne)
	t.Run("ComponentFirmwareSets", testComponentFirmwareSetsOne)
	t.Run("ComponentFirmwareSetMaps", testComponentFirmwareSetMapsOne)
	t.Run("ComponentFirmwareVersions", testComponentFirmwareVersionsOne)
	t.Run("ServerComponentTypes", testServerComponentTypesOne)
	t.Run("ServerComponents", testServerComponentsOne)
	t.Run("ServerCredentialTypes", testServerCredentialTypesOne)
	t.Run("ServerCredentials", testServerCredentialsOne)
	t.Run("Servers", testServersOne)
	t.Run("VersionedAttributes", testVersionedAttributesOne)
}

func TestAll(t *testing.T) {
	t.Run("Attributes", testAttributesAll)
	t.Run("ComponentFirmwareSets", testComponentFirmwareSetsAll)
	t.Run("ComponentFirmwareSetMaps", testComponentFirmwareSetMapsAll)
	t.Run("ComponentFirmwareVersions", testComponentFirmwareVersionsAll)
	t.Run("ServerComponentTypes", testServerComponentTypesAll)
	t.Run("ServerComponents", testServerComponentsAll)
	t.Run("ServerCredentialTypes", testServerCredentialTypesAll)
	t.Run("ServerCredentials", testServerCredentialsAll)
	t.Run("Servers", testServersAll)
	t.Run("VersionedAttributes", testVersionedAttributesAll)
}

func TestCount(t *testing.T) {
	t.Run("Attributes", testAttributesCount)
	t.Run("ComponentFirmwareSets", testComponentFirmwareSetsCount)
	t.Run("ComponentFirmwareSetMaps", testComponentFirmwareSetMapsCount)
	t.Run("ComponentFirmwareVersions", testComponentFirmwareVersionsCount)
	t.Run("ServerComponentTypes", testServerComponentTypesCount)
	t.Run("ServerComponents", testServerComponentsCount)
	t.Run("ServerCredentialTypes", testServerCredentialTypesCount)
	t.Run("ServerCredentials", testServerCredentialsCount)
	t.Run("Servers", testServersCount)
	t.Run("VersionedAttributes", testVersionedAttributesCount)
}

func TestHooks(t *testing.T) {
	t.Run("Attributes", testAttributesHooks)
	t.Run("ComponentFirmwareSets", testComponentFirmwareSetsHooks)
	t.Run("ComponentFirmwareSetMaps", testComponentFirmwareSetMapsHooks)
	t.Run("ComponentFirmwareVersions", testComponentFirmwareVersionsHooks)
	t.Run("ServerComponentTypes", testServerComponentTypesHooks)
	t.Run("ServerComponents", testServerComponentsHooks)
	t.Run("ServerCredentialTypes", testServerCredentialTypesHooks)
	t.Run("ServerCredentials", testServerCredentialsHooks)
	t.Run("Servers", testServersHooks)
	t.Run("VersionedAttributes", testVersionedAttributesHooks)
}

func TestInsert(t *testing.T) {
	t.Run("Attributes", testAttributesInsert)
	t.Run("Attributes", testAttributesInsertWhitelist)
	t.Run("ComponentFirmwareSets", testComponentFirmwareSetsInsert)
	t.Run("ComponentFirmwareSets", testComponentFirmwareSetsInsertWhitelist)
	t.Run("ComponentFirmwareSetMaps", testComponentFirmwareSetMapsInsert)
	t.Run("ComponentFirmwareSetMaps", testComponentFirmwareSetMapsInsertWhitelist)
	t.Run("ComponentFirmwareVersions", testComponentFirmwareVersionsInsert)
	t.Run("ComponentFirmwareVersions", testComponentFirmwareVersionsInsertWhitelist)
	t.Run("ServerComponentTypes", testServerComponentTypesInsert)
	t.Run("ServerComponentTypes", testServerComponentTypesInsertWhitelist)
	t.Run("ServerComponents", testServerComponentsInsert)
	t.Run("ServerComponents", testServerComponentsInsertWhitelist)
	t.Run("ServerCredentialTypes", testServerCredentialTypesInsert)
	t.Run("ServerCredentialTypes", testServerCredentialTypesInsertWhitelist)
	t.Run("ServerCredentials", testServerCredentialsInsert)
	t.Run("ServerCredentials", testServerCredentialsInsertWhitelist)
	t.Run("Servers", testServersInsert)
	t.Run("Servers", testServersInsertWhitelist)
	t.Run("VersionedAttributes", testVersionedAttributesInsert)
	t.Run("VersionedAttributes", testVersionedAttributesInsertWhitelist)
}

// TestToOne tests cannot be run in parallel
// or deadlocks can occur.
func TestToOne(t *testing.T) {
	t.Run("AttributeToServerUsingServer", testAttributeToOneServerUsingServer)
	t.Run("AttributeToServerComponentUsingServerComponent", testAttributeToOneServerComponentUsingServerComponent)
	t.Run("AttributeToComponentFirmwareSetUsingComponentFirmwareSet", testAttributeToOneComponentFirmwareSetUsingComponentFirmwareSet)
	t.Run("ComponentFirmwareSetMapToComponentFirmwareSetUsingFirmwareSet", testComponentFirmwareSetMapToOneComponentFirmwareSetUsingFirmwareSet)
	t.Run("ComponentFirmwareSetMapToComponentFirmwareVersionUsingFirmware", testComponentFirmwareSetMapToOneComponentFirmwareVersionUsingFirmware)
	t.Run("ServerComponentToServerUsingServer", testServerComponentToOneServerUsingServer)
	t.Run("ServerComponentToServerComponentTypeUsingServerComponentType", testServerComponentToOneServerComponentTypeUsingServerComponentType)
	t.Run("ServerCredentialToServerCredentialTypeUsingServerCredentialType", testServerCredentialToOneServerCredentialTypeUsingServerCredentialType)
	t.Run("ServerCredentialToServerUsingServer", testServerCredentialToOneServerUsingServer)
	t.Run("VersionedAttributeToServerUsingServer", testVersionedAttributeToOneServerUsingServer)
	t.Run("VersionedAttributeToServerComponentUsingServerComponent", testVersionedAttributeToOneServerComponentUsingServerComponent)
}

// TestOneToOne tests cannot be run in parallel
// or deadlocks can occur.
func TestOneToOne(t *testing.T) {}

// TestToMany tests cannot be run in parallel
// or deadlocks can occur.
func TestToMany(t *testing.T) {
	t.Run("ComponentFirmwareSetToAttributes", testComponentFirmwareSetToManyAttributes)
	t.Run("ComponentFirmwareSetToFirmwareSetComponentFirmwareSetMaps", testComponentFirmwareSetToManyFirmwareSetComponentFirmwareSetMaps)
	t.Run("ComponentFirmwareVersionToFirmwareComponentFirmwareSetMaps", testComponentFirmwareVersionToManyFirmwareComponentFirmwareSetMaps)
	t.Run("ServerComponentTypeToServerComponents", testServerComponentTypeToManyServerComponents)
	t.Run("ServerComponentToAttributes", testServerComponentToManyAttributes)
	t.Run("ServerComponentToVersionedAttributes", testServerComponentToManyVersionedAttributes)
	t.Run("ServerCredentialTypeToServerCredentials", testServerCredentialTypeToManyServerCredentials)
	t.Run("ServerToAttributes", testServerToManyAttributes)
	t.Run("ServerToServerComponents", testServerToManyServerComponents)
	t.Run("ServerToServerCredentials", testServerToManyServerCredentials)
	t.Run("ServerToVersionedAttributes", testServerToManyVersionedAttributes)
}

// TestToOneSet tests cannot be run in parallel
// or deadlocks can occur.
func TestToOneSet(t *testing.T) {
	t.Run("AttributeToServerUsingAttributes", testAttributeToOneSetOpServerUsingServer)
	t.Run("AttributeToServerComponentUsingAttributes", testAttributeToOneSetOpServerComponentUsingServerComponent)
	t.Run("AttributeToComponentFirmwareSetUsingAttributes", testAttributeToOneSetOpComponentFirmwareSetUsingComponentFirmwareSet)
	t.Run("ComponentFirmwareSetMapToComponentFirmwareSetUsingFirmwareSetComponentFirmwareSetMaps", testComponentFirmwareSetMapToOneSetOpComponentFirmwareSetUsingFirmwareSet)
	t.Run("ComponentFirmwareSetMapToComponentFirmwareVersionUsingFirmwareComponentFirmwareSetMaps", testComponentFirmwareSetMapToOneSetOpComponentFirmwareVersionUsingFirmware)
	t.Run("ServerComponentToServerUsingServerComponents", testServerComponentToOneSetOpServerUsingServer)
	t.Run("ServerComponentToServerComponentTypeUsingServerComponents", testServerComponentToOneSetOpServerComponentTypeUsingServerComponentType)
	t.Run("ServerCredentialToServerCredentialTypeUsingServerCredentials", testServerCredentialToOneSetOpServerCredentialTypeUsingServerCredentialType)
	t.Run("ServerCredentialToServerUsingServerCredentials", testServerCredentialToOneSetOpServerUsingServer)
	t.Run("VersionedAttributeToServerUsingVersionedAttributes", testVersionedAttributeToOneSetOpServerUsingServer)
	t.Run("VersionedAttributeToServerComponentUsingVersionedAttributes", testVersionedAttributeToOneSetOpServerComponentUsingServerComponent)
}

// TestToOneRemove tests cannot be run in parallel
// or deadlocks can occur.
func TestToOneRemove(t *testing.T) {
	t.Run("AttributeToServerUsingAttributes", testAttributeToOneRemoveOpServerUsingServer)
	t.Run("AttributeToServerComponentUsingAttributes", testAttributeToOneRemoveOpServerComponentUsingServerComponent)
	t.Run("AttributeToComponentFirmwareSetUsingAttributes", testAttributeToOneRemoveOpComponentFirmwareSetUsingComponentFirmwareSet)
	t.Run("VersionedAttributeToServerUsingVersionedAttributes", testVersionedAttributeToOneRemoveOpServerUsingServer)
	t.Run("VersionedAttributeToServerComponentUsingVersionedAttributes", testVersionedAttributeToOneRemoveOpServerComponentUsingServerComponent)
}

// TestOneToOneSet tests cannot be run in parallel
// or deadlocks can occur.
func TestOneToOneSet(t *testing.T) {}

// TestOneToOneRemove tests cannot be run in parallel
// or deadlocks can occur.
func TestOneToOneRemove(t *testing.T) {}

// TestToManyAdd tests cannot be run in parallel
// or deadlocks can occur.
func TestToManyAdd(t *testing.T) {
	t.Run("ComponentFirmwareSetToAttributes", testComponentFirmwareSetToManyAddOpAttributes)
	t.Run("ComponentFirmwareSetToFirmwareSetComponentFirmwareSetMaps", testComponentFirmwareSetToManyAddOpFirmwareSetComponentFirmwareSetMaps)
	t.Run("ComponentFirmwareVersionToFirmwareComponentFirmwareSetMaps", testComponentFirmwareVersionToManyAddOpFirmwareComponentFirmwareSetMaps)
	t.Run("ServerComponentTypeToServerComponents", testServerComponentTypeToManyAddOpServerComponents)
	t.Run("ServerComponentToAttributes", testServerComponentToManyAddOpAttributes)
	t.Run("ServerComponentToVersionedAttributes", testServerComponentToManyAddOpVersionedAttributes)
	t.Run("ServerCredentialTypeToServerCredentials", testServerCredentialTypeToManyAddOpServerCredentials)
	t.Run("ServerToAttributes", testServerToManyAddOpAttributes)
	t.Run("ServerToServerComponents", testServerToManyAddOpServerComponents)
	t.Run("ServerToServerCredentials", testServerToManyAddOpServerCredentials)
	t.Run("ServerToVersionedAttributes", testServerToManyAddOpVersionedAttributes)
}

// TestToManySet tests cannot be run in parallel
// or deadlocks can occur.
func TestToManySet(t *testing.T) {
	t.Run("ComponentFirmwareSetToAttributes", testComponentFirmwareSetToManySetOpAttributes)
	t.Run("ServerComponentToAttributes", testServerComponentToManySetOpAttributes)
	t.Run("ServerComponentToVersionedAttributes", testServerComponentToManySetOpVersionedAttributes)
	t.Run("ServerToAttributes", testServerToManySetOpAttributes)
	t.Run("ServerToVersionedAttributes", testServerToManySetOpVersionedAttributes)
}

// TestToManyRemove tests cannot be run in parallel
// or deadlocks can occur.
func TestToManyRemove(t *testing.T) {
	t.Run("ComponentFirmwareSetToAttributes", testComponentFirmwareSetToManyRemoveOpAttributes)
	t.Run("ServerComponentToAttributes", testServerComponentToManyRemoveOpAttributes)
	t.Run("ServerComponentToVersionedAttributes", testServerComponentToManyRemoveOpVersionedAttributes)
	t.Run("ServerToAttributes", testServerToManyRemoveOpAttributes)
	t.Run("ServerToVersionedAttributes", testServerToManyRemoveOpVersionedAttributes)
}

func TestReload(t *testing.T) {
	t.Run("Attributes", testAttributesReload)
	t.Run("ComponentFirmwareSets", testComponentFirmwareSetsReload)
	t.Run("ComponentFirmwareSetMaps", testComponentFirmwareSetMapsReload)
	t.Run("ComponentFirmwareVersions", testComponentFirmwareVersionsReload)
	t.Run("ServerComponentTypes", testServerComponentTypesReload)
	t.Run("ServerComponents", testServerComponentsReload)
	t.Run("ServerCredentialTypes", testServerCredentialTypesReload)
	t.Run("ServerCredentials", testServerCredentialsReload)
	t.Run("Servers", testServersReload)
	t.Run("VersionedAttributes", testVersionedAttributesReload)
}

func TestReloadAll(t *testing.T) {
	t.Run("Attributes", testAttributesReloadAll)
	t.Run("ComponentFirmwareSets", testComponentFirmwareSetsReloadAll)
	t.Run("ComponentFirmwareSetMaps", testComponentFirmwareSetMapsReloadAll)
	t.Run("ComponentFirmwareVersions", testComponentFirmwareVersionsReloadAll)
	t.Run("ServerComponentTypes", testServerComponentTypesReloadAll)
	t.Run("ServerComponents", testServerComponentsReloadAll)
	t.Run("ServerCredentialTypes", testServerCredentialTypesReloadAll)
	t.Run("ServerCredentials", testServerCredentialsReloadAll)
	t.Run("Servers", testServersReloadAll)
	t.Run("VersionedAttributes", testVersionedAttributesReloadAll)
}

func TestSelect(t *testing.T) {
	t.Run("Attributes", testAttributesSelect)
	t.Run("ComponentFirmwareSets", testComponentFirmwareSetsSelect)
	t.Run("ComponentFirmwareSetMaps", testComponentFirmwareSetMapsSelect)
	t.Run("ComponentFirmwareVersions", testComponentFirmwareVersionsSelect)
	t.Run("ServerComponentTypes", testServerComponentTypesSelect)
	t.Run("ServerComponents", testServerComponentsSelect)
	t.Run("ServerCredentialTypes", testServerCredentialTypesSelect)
	t.Run("ServerCredentials", testServerCredentialsSelect)
	t.Run("Servers", testServersSelect)
	t.Run("VersionedAttributes", testVersionedAttributesSelect)
}

func TestUpdate(t *testing.T) {
	t.Run("Attributes", testAttributesUpdate)
	t.Run("ComponentFirmwareSets", testComponentFirmwareSetsUpdate)
	t.Run("ComponentFirmwareSetMaps", testComponentFirmwareSetMapsUpdate)
	t.Run("ComponentFirmwareVersions", testComponentFirmwareVersionsUpdate)
	t.Run("ServerComponentTypes", testServerComponentTypesUpdate)
	t.Run("ServerComponents", testServerComponentsUpdate)
	t.Run("ServerCredentialTypes", testServerCredentialTypesUpdate)
	t.Run("ServerCredentials", testServerCredentialsUpdate)
	t.Run("Servers", testServersUpdate)
	t.Run("VersionedAttributes", testVersionedAttributesUpdate)
}

func TestSliceUpdateAll(t *testing.T) {
	t.Run("Attributes", testAttributesSliceUpdateAll)
	t.Run("ComponentFirmwareSets", testComponentFirmwareSetsSliceUpdateAll)
	t.Run("ComponentFirmwareSetMaps", testComponentFirmwareSetMapsSliceUpdateAll)
	t.Run("ComponentFirmwareVersions", testComponentFirmwareVersionsSliceUpdateAll)
	t.Run("ServerComponentTypes", testServerComponentTypesSliceUpdateAll)
	t.Run("ServerComponents", testServerComponentsSliceUpdateAll)
	t.Run("ServerCredentialTypes", testServerCredentialTypesSliceUpdateAll)
	t.Run("ServerCredentials", testServerCredentialsSliceUpdateAll)
	t.Run("Servers", testServersSliceUpdateAll)
	t.Run("VersionedAttributes", testVersionedAttributesSliceUpdateAll)
}
