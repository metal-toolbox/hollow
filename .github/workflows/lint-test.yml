---
name: Linting and Test

# Run for all pushes to main and pull requests when Go or YAML files change
on:
  push:
    paths:
      - go.mod
      - go.sum
      - '**.go'
      - '**.yaml'
    branches:
      - main
  pull_request:
    paths:
      - go.mod
      - go.sum
      - '**.go'
      - '**.yaml'

jobs:
  golangci:
    name: lint-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.16'

      - name: Start test database
        run: make docker-up

      - name: Install goose for database migrations
        run: go install github.com/pressly/goose/cmd/goose@v2.7.0

      - name: Create test DB
        run: make test-database

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v2

        with:
          # Required: the version of golangci-lint is required and must be specified without patch version: we always use the latest patch version.
          version: v1.41

          # Optional: working directory, useful for monorepos
          # working-directory: somedir

          # Optional: golangci-lint command line arguments.
          # args: --issues-exit-code=0
          args: --timeout=5m

          # Optional: show only new issues if it's a pull request. The default value is `false`.
          # only-new-issues: true

      - name: Run go tests and generate coverage report
        run: HOLLOW_TEST_DB="host=localhost port=26257 user=root sslmode=disable dbname=hollow_test" go test ./... -race -coverprofile=coverage.txt -covermode=atomic -tags testtools -p 1

      - name: Stop test database
        run: make docker-down

      - name: Upload coverage report
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.txt
          flags: unittests
          name: codecov-umbrella
